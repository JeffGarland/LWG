<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4385" status="New">
<title>Including <tt>&lt;simd&gt;</tt> doesn't provide `std::begin/end`
</title>
<section>
<sref ref="[iterator.range]"/>
</section>
<submitter>Hewill Kang</submitter>
<date>26 Sep 2025</date>
<priority>3</priority>

<discussion>
<p>
`std::simd::basic_vec` and `std::simd::basic_mask` are ranges since <paper num="P3480R6"/>, 
it is reasonable to enable range access utilities when introducing <code>&lt;simd&gt;</code>.
</p>

<note>2025-10-17; Reflector poll.</note>
<p>
Set priority to 3 after reflector poll.
</p>
<p>
"This will be the first time we add the free-function begn/end interface to support a type where `end` returns a sentinel.
I would not want to set precedent here without at least taking the time to think about it, and acknowledge a deliberate intent."
</p>
<p>
"The intent has been deliberate since <paper num="P0184R0"/>."
</p>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N5014"/>.
</p>

<ol>

<li><p>Modify <sref ref="[iterator.range]"/> as indicated:</p>

<blockquote>
<p>
-1- In addition to being available via inclusion of the <tt>&lt;iterator&gt;</tt> header, the function
templates in <sref ref="[iterator.range]"/> are available when any of the following headers are included: 
<tt>&lt;array&gt;</tt>,
<tt>&lt;deque&gt;</tt>, <tt>&lt;flat_map&gt;</tt>, <tt>&lt;flat_set&gt;</tt>,
<tt>&lt;forward_list&gt;</tt>,
<tt>&lt;hive&gt;</tt>,
<tt>&lt;inplace_vector&gt;</tt>, <tt>&lt;list&gt;</tt>, <tt>&lt;map&gt;</tt>,
<tt>&lt;regex&gt;</tt>, <tt>&lt;set&gt;</tt>, <ins><tt>&lt;simd&gt;</tt></ins>, 
<tt>&lt;span&gt;</tt>, <tt>&lt;string&gt;</tt>, <tt>&lt;string_view&gt;</tt>,
<tt>&lt;unordered_map&gt;</tt>, <tt>&lt;unordered_set&gt;</tt>, and <tt>&lt;vector&gt;</tt>.

</p>
</blockquote>

</li>

</ol>
</resolution>

</issue>
