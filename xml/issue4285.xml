<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4285" status="New">
<title>`time_get::do_get_date` is problematic even after LWG 461</title>
<section>
<sref ref="[locale.time.get.members]"/>
</section>
<submitter>S. B. Tam</submitter>
<date>27 Jun 2025</date>
<priority>3</priority>

<discussion>
<p>
Background: <a href="https://github.com/cplusplus/draft/pull/8009">https://github.com/cplusplus/draft/pull/8009</a>
<p/>
LWG <iref ref="461"/> changed `time_get::do_get_date` to parse a set of fixed formats. For example, if 
`time_get::date_order()` is `no_order` or `mdy`, the format parsed by `do_get_date` is `%m/%d/%y`.
<p/>
This has several problems:
</p>
<ol>
<li><p>When the resolution of LWG <iref ref="461"/> was applied to the draft standard, the slashes were lost. 
This could mislead people into implementing `do_get_date` using the incorrect formats. Fortunately, none 
of the standard library implementations are affected by this mistake.</p></li>
<li><p>Only 2-digit years are accepted due to the use of `%y`. This could lead to incorrect parse if 
`strftime` uses `%Y` for the locale's date format.</p></li>
<li><p>`date_order()` might need additional locale facets to find out the date order, but it doesn't have an 
<tt>ios_base&amp;</tt> argument from which to get the locale.</p></li>
<li><p>Many locales do not use any of the specified formats. For example, `de_DE` uses `%d.%m.%Y`, `zh_CN` 
uses `%Y年%m月%d日`. Although <sref ref="[locale.time.get.virtuals]"/>/5 gives an implementation the latitude 
to accept additional formats, ambiguity could arise if the locale's format disagrees with `date_order()`.</p></li>
</ol>
<p>
On POSIX systems, it is possible to query the locale's date format using `nl_langinfo(D_FMT)`. 
Maybe an implementation should be allowed to use that format <b>instead</b> of the one indicated by `date_order()`.
</p>

<note>2025-10-21; Reflector poll.</note>
<p>
Set priority to 3 after reflector poll.
</p>
<p>
"The current wording of `do_date_order()` suggests it should return one of the
`dmy`, `mdy`, `ymd`, `ymd`, or `ydm` enumerators as long as the date format
specified by `%x` has no components except day, month, and year.
But that fails to consider alternative separators between the components. 
The `kok_IN` locale uses `"%d-%m-%y" which does not contain
"other variable components" but still doesn't match any of the fixed formats
in Table 102.
We need normative wording allowing `no_order`, instead of just a footnoote,
and we need to say `do_get_date` only has to use the formats in the table
when `do_date_order() != no_order`. It should not default to the `mdy` format
when `do_date_order()` returns `no_order`, because if the `mdy` format is
correct then it should have returned `mdy`!"
</p>
</discussion>

<resolution>
</resolution>

</issue>
