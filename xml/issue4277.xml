<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4277" status="New">
<title>&sect;[algorithms.requirements] It is unclear what an algorithm is</title>
<section>
<sref ref="[algorithms.requirements]"/>
</section>
<submitter>Jan Schultke</submitter>
<date>08 Jun 2025</date>
<priority>4</priority>

<discussion>
<p>
<sref ref="[algorithms.requirements]"/> paragraph 15 states:
</p>
<blockquote style="border-left: 3px solid #ccc;padding-left: 15px;">
<p>
The well-formedness and behavior of a call to an algorithm with an explicitly-specified 
template argument list is unspecified, except where explicitly stated otherwise.
</p>
</blockquote>
<p>
It is unclear what this applies to because "algorithm" is never defined. <sref ref="[algorithms.requirements]"/> 
paragraph 1 uses the term while mentioning iterators and containers, but <sref ref="[algorithm]"/> specifies 
function templates such as `std::gcd` which do not accept iterators.
<p/>
The <i>Remarks</i> specifications in <sref ref="[alg.min.max]"/> providing exemptions from 
<sref ref="[algorithms.requirements]"/> paragraph 15 suggest that even function templates not 
accepting iterators are considered algorithms.
</p>

<note>2025-10-21; Reflector poll.</note>
<p>
Set priority to 4 after reflector poll.
</p>
<p>
"NAD, I don't think people are confused about what an algorithm is."
</p>
<p>
"I'd rather the fix would define 'algorithm', as even the Note below
the change uses that term."
</p>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N5008"/>.
</p>

<ol>
<li><p>Modify <sref ref="[algorithms.requirements]"/> as indicated:</p>

<blockquote>
<p>
-15- The well-formedness and behavior of a call to <del>an algorithm</del><ins>a function template specified in Clause 
<sref ref="[algorithms]"/> (including call operators of algorithm function objects denoted as algorithms throughout Clause 
<sref ref="[algorithms.requirements]"/>)</ins> with an explicitly-specified template argument list is unspecified, 
except where explicitly stated otherwise.
<p/>
[<i>Note 3</i>: Consequently, an implementation can declare an algorithm with different template parameters than those
presented. &mdash; <i>end note</i>]
</p>
</blockquote>
</li>

</ol>
</resolution>

</issue>
