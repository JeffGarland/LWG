<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="1484" status="LEWG">
<title>Need a way to join a thread with a timeout</title>
<section><sref ref="[thread.thread.class]"/></section>
<submitter>INCITS</submitter>
<date>25 Aug 2010</date>
<priority>4</priority>

<discussion>
<p><b>Addresses US-183</b></p>

<p>
There is no way to join a thread with a timeout.
</p>

<note>
Resolution proposed by ballot comment:
</note>
<blockquote><p>
Add <tt>join_for</tt> and <tt>join_until</tt>. Or decide one should
never join a thread with a timeout since <tt>pthread_join</tt> doesn't have a 
timeout version.
</p></blockquote>

<note>
2010 Batavia
</note>
<p>
The concurrency working group deemed this an extension beyond the scope of C++0x.
</p>
<rationale><p>The LWG does not wish to make a change at this time.</p></rationale>

<note>2017-03-01, Kona</note>
<p>
SG1 recommends: Close as NAD
<p/>
There has not been much demand for it, and it would usually be difficult to deal with <tt>thread_local</tt> destructor races. 
It can be approximated with a condition variable wait followed by an unconditional <tt>join</tt>. Adding it would create 
implementation issues on Posix. As always, this may be revisited if we have a paper exploring the issues in detail.
</p>

<note>2025-10-21; Priority set to 4 based on age of issue and lack of activity.</note>
</discussion>

<resolution>
</resolution>

</issue>
